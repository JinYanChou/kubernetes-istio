apiVersion: apps/v1
kind: Deployment
metadata:
  name: qpweb
  namespace: csr
  labels:
    app: qpweb
spec:
  replicas: 3
  selector:
    matchLabels:
      app: qpweb
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 10
  template:
    metadata:
      labels:
        app: qpweb
    spec:
      initContainers:
      - name: init-redis
        image: redis:5.0.6-alpine
        command:
        - sh
        - -c
        - |
          COUNT=$(redis-cli -h redis-0.redis.csr.svc.cluster.local cluster nodes | wc -l)
          until $COUNT -eq 6; do echo waiting for redis; sleep 2; done;
      containers:
      - name: qpweb
        image: hub.cathay/qpweb:1.0
        ports:
        - containerPort: 8080
          name: web
        volumeMounts:
        - name: tomcat-server-xml
          mountPath: /usr/local/tomcat/conf/server.xml
          subPath: server.xml
        - name: tomcat-context-xml
          mountPath: /usr/local/tomcat/conf/context.xml
          subPath: context.xml
      volumes:
      - name: tomcat-server-xml
        configMap:
          name: tomcat-configmap
          items:
          - key: server.xml
            path: server.xml
      - name: tomcat-context-xml
        configMap:
          name: tomcat-configmap
          items:
          - key: context.xml
            path: context.xml
      imagePullSecrets:
      - name: regcred
---
apiVersion: v1
kind: Service
metadata:
  name: qpweb
  namespace: csr
spec:
  selector:
    app: qpweb
  ports:
  - name: web
    port: 8080
    targetPort: 8080