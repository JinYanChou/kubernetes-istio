apiVersion: batch/v1
kind: Job
metadata:
  name: redis-cluster-job
  namespace: csr
spec:
  ttlSecondsAfterFinished: 0
  template:
    metadata:
      name: redis-cluster-job
    spec:
      initContainers:
      - name: init-redis
        image: busybox:1.28
        command: ['sh', '-c', 'until nslookup redis-5.redis.csr.svc.cluster.local; do echo waiting for redis; sleep 2; done;']
      containers:
      - name: redis
        image: redis:5.0.6-alpine
        command:
        - sh
        - -c
        - |
          redis0="$(getent hosts redis-0.redis.csr.svc.cluster.local | cut -d' ' -f1):6379"
          redis1="$(getent hosts redis-1.redis.csr.svc.cluster.local | cut -d' ' -f1):6379"
          redis2="$(getent hosts redis-2.redis.csr.svc.cluster.local | cut -d' ' -f1):6379"
          redis3="$(getent hosts redis-3.redis.csr.svc.cluster.local | cut -d' ' -f1):6379"
          redis4="$(getent hosts redis-4.redis.csr.svc.cluster.local | cut -d' ' -f1):6379"
          redis5="$(getent hosts redis-5.redis.csr.svc.cluster.local | cut -d' ' -f1):6379"
          COUNT=$(redis-cli -h redis-0.redis.csr.svc.cluster.local cluster nodes | wc -l)
          if [ $COUNT -eq '1' ]; then
            redis-cli --cluster create ${redis0} ${redis1} ${redis2} --cluster-yes
            redis-cli --cluster add-node ${redis3} ${redis0} --cluster-slave
            redis-cli --cluster add-node ${redis4} ${redis1} --cluster-slave
            redis-cli --cluster add-node ${redis5} ${redis2} --cluster-slave
          fi
      restartPolicy: Never
